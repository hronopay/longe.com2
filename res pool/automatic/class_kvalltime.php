<?php 
class KvAll {

#############################################################################################################################################################
####################### ---------------------------------------------------------------------- ##############################################################
####################### Класс, в котором накапливаются      данные  по   квартире за все время ##############################################################
####################### ---------------------------------------------------------------------- ##############################################################
#############################################################################################################################################################

  
  var $MonthNach =   array();
  var $MonthPay =    array();
  var $MonthSaldo =   array();
  var $MonthPenyProcent =   array();
  var $MonthPeny =   array(); //  заполняется из "предыдущего месяца", поэтому  опережает другие ассивы по хронологическому заполнению
  var $Number = '';
  var $AllNach = 0;
  var $AllPay = 0;

var $MonthSumm ;




  //----------- Constructor ------------------- 
	function KvAll($Number) {
		
		$this->Number = $Number;

	}
  //----------- END Constructor ----------------





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function SetMonthNachislenie ($mon, $sum)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

$this->MonthNach[$mon] = $sum + $this->MonthPeny[$mon];
//    MonthPeny - заполняется из "предыдущего месяца", поэтому  опережает другие mассивы по хронологическому заполнению
$this->AllNach  += $this->MonthNach[$mon];

return round($this->AllNach,2);

} #eof




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetMonthNachislenie ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
return round($this->MonthNach[$mon],2);

} #eof




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function SetMonthPay ($mon, $sum)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

$this->MonthPay[$mon] += $sum;

/* 
$this->AllPay  += $sum;
return $this->AllPay;
 */
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetMonthPay ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
return round($this->MonthPay[$mon],2);
} #eof




/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetAllPay ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
$this->AllPay = 0;
	foreach ($this->MonthPay  as $key => $value){
		if($key<=$mon) $this->AllPay+=$value;
	} 


return round($this->AllPay,2);
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function SetMonthPeny ($mon, $Peny)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

$this->MonthPeny[   NextMonth($mon)   ] = $Peny;
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetMonthPeny ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

return round($this->MonthPeny[$mon],2);
} #eof






/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function SetMonthSaldo ($mon, $Saldo)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

$this->MonthSaldo[$mon] += $Saldo;
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetMonthSaldo ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

return round($this->MonthSaldo[$mon],2);
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function SetMonthPenyProcent ($mon, $sum)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
$this->MonthPenyProcent[$mon] = 0;
if(isset($sum) && $sum > 0) $this->MonthPenyProcent[$mon] = $sum/100;
} #eof





/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
																	function GetMonthPenyProcent ($mon)  {
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

return $this->MonthPenyProcent[$mon];
} #eof





}// end of CLASS
?>